on:
  - push
  - pull_request

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      max-parallel: 1
      matrix:
        operating-system:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        php-versions:
          - 7.2
          - 7.3
          - 7.4
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: icms
          MYSQL_DATABASE: icms
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: curl, gd, pdo_mysql, json, mbstring, pcre, session
          ini-values: post_max_size=256M
          coverage: xdebug
          tools: phpunit:5.7.27
      - name: Check PHP Version
        run: php -v
      - name: Verify MySQL connection
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -picms -e "SHOW DATABASES"
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --no-dev --prefer-dist --optimize-autoloader
      - name: Testing with PHPUnit
        env:
          DB_TYPE: pdo.mysql
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASS: icms
          DB_PCONNECT: 0
          DB_NAME: icms
          DB_CHARSET: utf8
          DB_COLLATION: utf8_general_ci
          DB_PREFIX: icms
          DB_SALT: icms
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: phpunit -c tests/configuration.xml